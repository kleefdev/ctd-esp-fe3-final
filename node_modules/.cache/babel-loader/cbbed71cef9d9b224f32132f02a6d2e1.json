{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clifo\\\\OneDrive\\\\Desktop\\\\fe3-final-cjl\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useState, useEffect, useReducer, useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContextGlobal = /*#__PURE__*/createContext();\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [dentists, setDentists] = useState([]);\n  const url = 'https://jsonplaceholder.typicode.com/users';\n  useEf;\n  fetch(url).then(res => res.json()).then(data => setDentists(data));\n\n  const appReducer = (state, action) => {\n    switch (action.type) {\n      case 'TOGGLE_FAVORITE':\n        const dentistId = action.payload;\n        const isFavorite = state.favorites.includes(dentistId);\n        return { ...state,\n          favorites: isFavorite ? state.favorites.filter(id => id !== dentistId) : [...state.favorites, dentistId]\n        };\n\n      default:\n        return state;\n    }\n  };\n\n  const initialState = {\n    theme: \"light\",\n    data: []\n  }; //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n\n  const [state, dispatch] = useReducer(appReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      dentists,\n      setDentists\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ContextProvider, \"BD+npNYpeinFCTkmTIFmkz9NA5c=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\nexport const useContextGlobal = () => {\n  _s2();\n\n  return useContext(ContextGlobal);\n};\n\n_s2(useContextGlobal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useReducer","useMemo","ContextGlobal","ContextProvider","children","dentists","setDentists","url","useEf","fetch","then","res","json","data","appReducer","state","action","type","dentistId","payload","isFavorite","favorites","includes","filter","id","initialState","theme","dispatch","useContextGlobal"],"sources":["C:/Users/clifo/OneDrive/Desktop/fe3-final-cjl/src/Components/utils/global.context.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useReducer, useMemo } from \"react\";\r\n\r\nexport const ContextGlobal = createContext()\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n\r\n    const[dentists, setDentists] = useState([])\r\n\r\n    const url = 'https://jsonplaceholder.typicode.com/users'\r\n    useEf\r\n    fetch(url)\r\n    .then(res=> res.json())\r\n    .then(data => setDentists(data));\r\n\r\n\r\n    const appReducer = (state, action) => {\r\n      switch (action.type) {\r\n        case 'TOGGLE_FAVORITE':\r\n          const dentistId = action.payload;\r\n          const isFavorite = state.favorites.includes(dentistId);\r\n\r\n          return {\r\n            ...state,\r\n            favorites: isFavorite\r\n              ? state.favorites.filter((id) => id !== dentistId)\r\n              : [...state.favorites, dentistId],\r\n          };\r\n        default:\r\n          return state;\r\n      }\r\n    }\r\n\r\n    const initialState = { theme: \"light\", data: []}\r\n\r\n    //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n\r\n    const [state, dispatch] = useReducer (appReducer, initialState);\r\n\r\n    return (\r\n      <ContextGlobal.Provider value={{dentists, setDentists}}>\r\n        {children}\r\n      </ContextGlobal.Provider>\r\n    );\r\n}\r\n\r\nexport default ContextProvider\r\n\r\nexport const useContextGlobal = () => useContext(ContextGlobal)\r\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,EAAqDC,SAArD,EAAgEC,UAAhE,EAA4EC,OAA5E,QAA2F,OAA3F;;AAEA,OAAO,MAAMC,aAAa,gBAAGN,aAAa,EAAnC;AAEP,OAAO,MAAMO,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAE7C,MAAK,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAvC;EAEA,MAAMS,GAAG,GAAG,4CAAZ;EACAC,KAAK;EACLC,KAAK,CAACF,GAAD,CAAL,CACCG,IADD,CACMC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EADZ,EAECF,IAFD,CAEMG,IAAI,IAAIP,WAAW,CAACO,IAAD,CAFzB;;EAKA,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;IACpC,QAAQA,MAAM,CAACC,IAAf;MACE,KAAK,iBAAL;QACE,MAAMC,SAAS,GAAGF,MAAM,CAACG,OAAzB;QACA,MAAMC,UAAU,GAAGL,KAAK,CAACM,SAAN,CAAgBC,QAAhB,CAAyBJ,SAAzB,CAAnB;QAEA,OAAO,EACL,GAAGH,KADE;UAELM,SAAS,EAAED,UAAU,GACjBL,KAAK,CAACM,SAAN,CAAgBE,MAAhB,CAAwBC,EAAD,IAAQA,EAAE,KAAKN,SAAtC,CADiB,GAEjB,CAAC,GAAGH,KAAK,CAACM,SAAV,EAAqBH,SAArB;QAJC,CAAP;;MAMF;QACE,OAAOH,KAAP;IAZJ;EAcD,CAfD;;EAiBA,MAAMU,YAAY,GAAG;IAAEC,KAAK,EAAE,OAAT;IAAkBb,IAAI,EAAE;EAAxB,CAArB,CA5B6C,CA8B7C;;EAEA,MAAM,CAACE,KAAD,EAAQY,QAAR,IAAoB3B,UAAU,CAAEc,UAAF,EAAcW,YAAd,CAApC;EAEA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAACpB,QAAD;MAAWC;IAAX,CAA/B;IAAA,UACGF;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKH,CAvCM;;GAAMD,e;;KAAAA,e;AAyCb,eAAeA,eAAf;AAEA,OAAO,MAAMyB,gBAAgB,GAAG;EAAA;;EAAA,OAAM/B,UAAU,CAACK,aAAD,CAAhB;AAAA,CAAzB;;IAAM0B,gB"},"metadata":{},"sourceType":"module"}