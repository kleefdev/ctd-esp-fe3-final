{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clifo\\\\OneDrive\\\\Desktop\\\\fe3-final-cjl\\\\src\\\\Routes\\\\Detail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react'; // import { ContextGlobal } from '../Components/utils/global.context';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Detail = _ref => {\n  _s();\n\n  let {\n    match\n  } = _ref;\n  const [dentistas, setDentist] = useState(null);\n  const {\n    theme\n  } = useContext();\n  useEffect(() => {\n    const fetchDentist = async () => {\n      try {\n        const response = await fetch(`https://jsonplaceholder.typicode.com/users/${match.params.id}`);\n\n        if (!response.ok) {\n          throw new Error('Failed to fetch dentist');\n        }\n\n        const dentistData = await response.json();\n        setDentists(dentistData);\n      } catch (error) {\n        console.error('Error fetching dentist:', error);\n      }\n    };\n\n    fetchDentist();\n  }, [match.params.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `Detail ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Detail Dentist id \", match.params.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), dentists && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./images/doctor.jpg\",\n          alt: \"Dentist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: dentists.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: dentists.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: dentists.phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: dentists.website\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Detail, \"CQ6esYvOQaz9oT+qsVIYLsGtmOg=\");\n\n_c = Detail;\nexport default Detail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Detail","match","dentistas","setDentist","theme","fetchDentist","response","fetch","params","id","ok","Error","dentistData","json","setDentists","error","console","dentists","name","email","phone","website"],"sources":["C:/Users/clifo/OneDrive/Desktop/fe3-final-cjl/src/Routes/Detail.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\n// import { ContextGlobal } from '../Components/utils/global.context';\r\n\r\n\r\nconst Detail = ({ match }) => {\r\n  const [dentistas, setDentist] = useState(null);\r\n  const { theme } = useContext();\r\n\r\n  useEffect(() => {\r\n    const fetchDentist = async () => {\r\n      try {\r\n        const response = await fetch(`https://jsonplaceholder.typicode.com/users/${match.params.id}`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch dentist');\r\n        }\r\n        const dentistData = await response.json();\r\n        setDentists(dentistData);\r\n      } catch (error) {\r\n        console.error('Error fetching dentist:', error);\r\n      }\r\n    };\r\n\r\n    fetchDentist();\r\n  }, [match.params.id]);\r\n\r\n  return (\r\n    <div className={`Detail ${theme}`}>\r\n      <h1>Detail Dentist id {match.params.id}</h1>\r\n            {dentists && (\r\n              <div>\r\n                <div className=\"card\">\r\n                  <img src=\"./images/doctor.jpg\" alt=\"Dentist\" />\r\n                  <h2>{dentists.name}</h2>\r\n                  <h3>{dentists.email}</h3>\r\n                  <h3>{dentists.phone}</h3>\r\n                  <h3>{dentists.website}</h3>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      };\r\n\r\nexport default Detail;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD,C,CACA;;;;AAGA,MAAMC,MAAM,GAAG,QAAe;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAC5B,MAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BJ,QAAQ,CAAC,IAAD,CAAxC;EACA,MAAM;IAAEK;EAAF,IAAYP,UAAU,EAA5B;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMO,YAAY,GAAG,YAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,8CAA6CN,KAAK,CAACO,MAAN,CAAaC,EAAG,EAA/D,CAA5B;;QACA,IAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;UAChB,MAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;QACD;;QACD,MAAMC,WAAW,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAA1B;QACAC,WAAW,CAACF,WAAD,CAAX;MACD,CAPD,CAOE,OAAOG,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;MACD;IACF,CAXD;;IAaAV,YAAY;EACb,CAfQ,EAeN,CAACJ,KAAK,CAACO,MAAN,CAAaC,EAAd,CAfM,CAAT;EAiBA,oBACE;IAAK,SAAS,EAAG,UAASL,KAAM,EAAhC;IAAA,wBACE;MAAA,iCAAuBH,KAAK,CAACO,MAAN,CAAaC,EAApC;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAESQ,QAAQ,iBACP;MAAA,uBACE;QAAK,SAAS,EAAC,MAAf;QAAA,wBACE;UAAK,GAAG,EAAC,qBAAT;UAA+B,GAAG,EAAC;QAAnC;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,UAAKA,QAAQ,CAACC;QAAd;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAA,UAAKD,QAAQ,CAACE;QAAd;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE;UAAA,UAAKF,QAAQ,CAACG;QAAd;UAAA;UAAA;UAAA;QAAA,QAJF,eAKE;UAAA,UAAKH,QAAQ,CAACI;QAAd;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHV;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBK,CArCP;;GAAMrB,M;;KAAAA,M;AAuCN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}